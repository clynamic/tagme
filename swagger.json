{
  "openapi": "3.0.1",
  "info": {
    "title": "Tag 'Em API",
    "description": "API for Tag 'Em, the backend for TagMe!",
    "version": "1.0.0"
  },
  "externalDocs": {
    "url": "/"
  },
  "servers": [],
  "tags": [],
  "paths": {
    "/login": {
      "post": {
        "tags": ["auth"],
        "description": "Fetch a JWT token",
        "operationId": "login",
        "parameters": [],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The JWT token",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["users"],
        "description": "Get a user by ID",
        "operationId": "user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "headers": {}
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["users"],
        "description": "Ban a user",
        "operationId": "banUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User was banned",
            "headers": {}
          },
          "404": {
            "description": "User not found",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": ["users"],
        "description": "Get a page of users",
        "operationId": "users",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The sort order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The users",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/{id}/rank": {
      "patch": {
        "tags": ["users"],
        "description": "Update a user's rank",
        "operationId": "updateUserRank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new user rank",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "enum": ["Member", "Privileged", "Janitor", "Admin"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User permissions were updated",
            "headers": {}
          },
          "404": {
            "description": "User not found",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/users/{id}/restore": {
      "patch": {
        "tags": ["users"],
        "description": "Pardon a user",
        "operationId": "unbanUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User was restored",
            "headers": {}
          },
          "404": {
            "description": "User not found",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": ["projects"],
        "description": "Get a project by ID",
        "operationId": "project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The project ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The project",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "headers": {}
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["projects"],
        "description": "Edit a project by ID",
        "operationId": "editProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The project ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New project properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Project edited",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "delete": {
        "tags": ["projects"],
        "description": "Delete a project by ID",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The project ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Project deleted",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/projects": {
      "get": {
        "tags": ["projects"],
        "description": "Get a page of projects",
        "operationId": "projects",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The sort order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC",
                "ASC_NULLS_FIRST",
                "DESC_NULLS_FIRST",
                "ASC_NULLS_LAST",
                "DESC_NULLS_LAST"
              ]
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "User ID to filter by association",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The projects",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["projects"],
        "description": "Create a project",
        "operationId": "createProject",
        "parameters": [],
        "requestBody": {
          "description": "New project properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The new project ID",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/projects/{id}/restore": {
      "patch": {
        "tags": ["projects"],
        "description": "Restore a project by ID",
        "operationId": "restoreProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The project ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Project restored",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/project-versions/{id}": {
      "get": {
        "tags": ["project-versions"],
        "description": "Get a project version by ID",
        "operationId": "projectVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The project version ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The project version",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectVersion"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/project-versions": {
      "get": {
        "tags": ["project-versions"],
        "description": "Get a page of project versions",
        "operationId": "projectVersions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The sort order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC",
                "ASC_NULLS_FIRST",
                "DESC_NULLS_FIRST",
                "ASC_NULLS_LAST",
                "DESC_NULLS_LAST"
              ]
            }
          },
          {
            "name": "project",
            "in": "query",
            "description": "Project ID to filter by association",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The project versions",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectVersion"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/comments/{id}": {
      "get": {
        "tags": ["comments"],
        "description": "Get a comment by ID",
        "operationId": "comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The comment ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The comment",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "headers": {}
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["comments"],
        "description": "Edit a comment by ID",
        "operationId": "editComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The comment ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New comment properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Comment edited",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "delete": {
        "tags": ["comments"],
        "description": "Hide a comment by ID",
        "operationId": "hideComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The comment ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comment hidden",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/comments": {
      "get": {
        "tags": ["comments"],
        "description": "Get a page of comments",
        "operationId": "comments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The sort order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC",
                "ASC_NULLS_FIRST",
                "DESC_NULLS_FIRST",
                "ASC_NULLS_LAST",
                "DESC_NULLS_LAST"
              ]
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "User ID to filter by association",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "query",
            "description": "Project ID to filter by association",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The page of comments",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["comments"],
        "description": "Create a comment",
        "operationId": "createComment",
        "parameters": [],
        "requestBody": {
          "description": "New comment properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The new comment ID",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/comments/{id}/restore": {
      "patch": {
        "tags": ["comments"],
        "description": "Restore a comment by ID",
        "operationId": "restoreComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The comment ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comment restored",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/contributions/{id}": {
      "get": {
        "tags": ["contributions"],
        "description": "Get a contribution by ID",
        "operationId": "contribution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The contribution ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The contribution",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contribution"
                }
              }
            }
          },
          "404": {
            "description": "Contribution not found",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/contributions": {
      "get": {
        "tags": ["contributions"],
        "description": "Get a page of contributions",
        "operationId": "contributions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The sort order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC",
                "ASC_NULLS_FIRST",
                "DESC_NULLS_FIRST",
                "ASC_NULLS_LAST",
                "DESC_NULLS_LAST"
              ]
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "User ID to filter by association",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "query",
            "description": "Project ID to filter by association",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The contributions",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contribution"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["contributions"],
        "description": "Create a contribution",
        "operationId": "createContribution",
        "parameters": [],
        "requestBody": {
          "description": "New contribution properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContributionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The new contribution ID",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/interactions/{id}": {
      "get": {
        "tags": ["interactions"],
        "description": "Get an interaction by ID",
        "operationId": "interaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The interaction ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The interaction",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interaction"
                }
              }
            }
          },
          "404": {
            "description": "Interaction not found",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/interactions": {
      "get": {
        "tags": ["interactions"],
        "description": "Get a page of interactions",
        "operationId": "interactions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The sort order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC",
                "ASC_NULLS_FIRST",
                "DESC_NULLS_FIRST",
                "ASC_NULLS_LAST",
                "DESC_NULLS_LAST"
              ]
            }
          },
          {
            "name": "endpoint",
            "in": "query",
            "description": "Endpoint to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Origin to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "User ID to filter by association",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "response",
            "in": "query",
            "description": "Response status to filter by",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The page of interactions",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interaction"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "UserCredentials": {
        "required": ["password", "username"],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "UserRank": {
        "type": "string",
        "enum": ["Member", "Privileged", "Janitor", "Admin"]
      },
      "User": {
        "required": ["id", "name", "rank", "strikes"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "rank": {
            "$ref": "#/components/schemas/UserRank"
          },
          "strikes": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectOption": {
        "required": ["add", "name", "remove"],
        "type": "object",
        "properties": {
          "add": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "remove": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SelectionMode": {
        "type": "string",
        "enum": ["One", "Many"]
      },
      "Project": {
        "required": [
          "conditionals",
          "createdAt",
          "description",
          "guidelines",
          "id",
          "meta",
          "mode",
          "name",
          "options",
          "tags",
          "userId",
          "version"
        ],
        "type": "object",
        "properties": {
          "conditionals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "guidelines": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "meta": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/SelectionMode"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectOption"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectRequest": {
        "required": [
          "description",
          "guidelines",
          "meta",
          "mode",
          "name",
          "options",
          "tags",
          "userId"
        ],
        "type": "object",
        "properties": {
          "conditionals": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "guidelines": {
            "type": "string"
          },
          "meta": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/SelectionMode"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectOption"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectEdit": {
        "type": "object",
        "properties": {
          "conditionals": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "guidelines": {
            "type": "string",
            "nullable": true
          },
          "mode": {
            "$ref": "#/components/schemas/SelectionMode"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProjectOption"
            }
          },
          "tags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProjectVersion": {
        "required": [
          "conditionals",
          "createdAt",
          "description",
          "guidelines",
          "id",
          "meta",
          "mode",
          "name",
          "options",
          "projectId",
          "tags",
          "version"
        ],
        "type": "object",
        "properties": {
          "conditionals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "guidelines": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "meta": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/SelectionMode"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectOption"
            }
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Comment": {
        "required": ["content", "createdAt", "id", "projectId", "userId"],
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "hiddenBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CommentRequest": {
        "required": ["content", "projectId", "userId"],
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CommentEdit": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Contribution": {
        "required": [
          "createdAt",
          "id",
          "postId",
          "projectId",
          "projectVersion",
          "userId"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "postId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "projectVersion": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ContributionRequest": {
        "required": ["postId", "projectId", "userId"],
        "type": "object",
        "properties": {
          "postId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Interaction": {
        "required": ["createdAt", "endpoint", "id", "origin", "response"],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endpoint": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "origin": {
            "type": "string"
          },
          "response": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      }
    },
    "examples": {},
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "name": "jwt",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
